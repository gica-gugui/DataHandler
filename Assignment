Programming assignment
======================

Write a console application which reads some input data, transforms the data
according to the following instructions and finally outputs the results to console.

The application should support the following command line arguments (only the first
one is mandatory):

-File <path>             full path to the input file
-SortByStartDate         sort results by column "Start date" in ascending order
-Project <project id>    filter results by column "Project"

The following requirements define the program functionality
and refer to the data sample below:

* Input data is tab-separated UTF-8 text with a header row.

* It only includes the columns listed below.

* Dates (Start date) and money (Savings amount) values conform to certain
format presented below.

* Columns "Savings amount" and "Currency" can have missing values denoted
as NULL. Those should be printed as empty strings.

* Column "Complexity" has a certain set of values (Simple, Moderate, Hazardous).
The program should report an error if a source value differs from those three
but keep in mind that more options (e.g. "VeryHigh") can be added in the future.

* The output should also have a header line.

* Lines that are empty or start with comment mark # are skipped.

* Order (but not names) of columns might be changed in future.

* In case of an invalid source value (in a date, money or Complexity column) a
descriptive error message should be printed to console and the program terminated.

    The following input example can be downloaded from here.

/***********************************************************************************************************************************************/
# Input file contents are between the two lines marked with stars
Project	Description	Start date	Category	Responsible	Savings amount	Currency	Complexity
2	Harmonize Lactobacillus acidophilus sourcing	2014-01-01 00:00:00.000	Dairy	Daisy Milks	NULL	NULL	Simple
3	Substitute Crème fraîche with evaporated milk in ice-cream products	2013-01-01 00:00:00.000	Dairy	Daisy Milks	141415.942696	EUR	Moderate
3	Substitute Crème fraîche with evaporated milk in ice-cream products	2013-01-01 00:00:00.000	Dairy	Daisy Milks	141415.942696	EUR	Moderate
4	Decrease production related non-categorized side costs	2013-01-01 00:00:00.000	Dairy	Daisy Milks	11689.322459	EUR	Hazardous
4	Decrease production related non-categorized side costs	2013-01-01 00:00:00.000	Dairy	Daisy Milks	11689.322459	EUR	Hazardous
5	Stop using Kryptonite in production	2013-04-01 00:00:00.000	Dairy	Clark Kent	NULL	NULL	Moderate
6	Black and white logo paper	2012-06-01 00:00:00.000	Office supplies	Clark Kent	4880.199567	EUR	Simple
6	Black and white logo paper	2012-06-01 00:00:00.000	Office supplies	Clark Kent	4880.199567	EUR	Simple
/***********************************************************************************************************************************************/

Please read the following recommendations carefully. They are even more important than the specs above.

Think about this assignment as a real project. Feel free to use any libraries you
would on the job. The goal is to demonstrate, what kind of code you write for a living
and see that you share our enthusiasm for code quality. We value maintainability, elegance
and clarity over individual presentation excellence - less is more.

Prefer readability and code structure over performance. Iterate rows multiple times
if that improves the quality of your code. Avoid creating super performing
monster with a single for-loop. Usage of LINQ (or functional programming style in general)
is highly recommended. It is possible to implement assignment so that only one row at time is handled,
rows are iterated only once, performance is great and the code is clean and well structured.
To save your time you don't have to achieve all those goals in this assignment unless you
really want to.

The output should have the same format as input, so no need e.g. to align the columns.

The end result of the assignment must contain source code for the application and unit
tests. It must be possible to compile the code and run the application. Feel free to
choose any programming language you like.

If you are unable to finish the whole assignment then write down the problems you
ran into so that we can discuss about them.

Deliver the source code as an encrypted zip file (if not encrypted the e-mail might not
get through). Use password "Sievo". You can also use e.g. Google Drive to deliver the file.